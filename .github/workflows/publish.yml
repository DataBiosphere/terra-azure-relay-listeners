name: Publish and deploy
on:
  push:
#    branches: [ main ]
#  workflow_dispatch:

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  ACR_REGISTRY: terradevacrpublic

jobs:
  publish-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-refs/heads/dev-${{ github.sha }}

      - name: Set commit short hash
        id: setHash
        run: |
          git_short_sha=$(git rev-parse --short HEAD)
          echo $git_short_sha
          echo "::set-output name=git_short_sha::${git_short_sha}"

      - name: Construct docker image name and tag
        id: image-name
        # TODO: update the tag
        run: echo ::set-output name=name::${ACR_REGISTRY}/${SERVICE_NAME}:${{ steps.setHash.outputs.git_short_sha }}

      - name: Build image locally with jib
        run: |
          ./gradlew --build-cache :service:jibDockerBuild \
          --image=${{ steps.image-name.outputs.name }} \
          -Djib.console=plain

      - name: Run Trivy vulnerability scanner
        # Link to the github location of the action https://github.com/broadinstitute/dsp-appsec-trivy-action
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push Container image
        run: |
          docker login ${{ secrets.ACR_REGISTRY }} --username ${{ secrets.ACR_SP_USERNAME }} \
          --password ${{ secrets.ACR_SP_PASSWORD }} && docker push ${{ steps.image-name.outputs.name }}


#      - name: ACR build
#        id: acr
#        uses: azure/acr-build@v1
#        with:
#          service_principal: ${{ secrets.ACR_SP_USERNAME }}
#          service_principal_password: ${{ secrets.ACR_SP_PASSWORD }}
#          tenant: ${{ secrets.ACR_TENANT_ID }}
#          registry: ${{ secrets.ACR_REGISTRY }}
#          repository: relay-listeners
#          image: image
#          folder: src/docker
#          dockerfile: ../../dockerfiles/Dockerfile

#      - name: Notify slack on failure
#        uses: 8398a7/action-slack@v3
#        if: failure()
#        env:
#          # TODO: Update this to approproiate slack channel
#          SLACK_WEBHOOK_URL: ${{ secrets.POLICY_INT_WEBHOOK_URL }}
#        with:
#          status: ${{ job.status }}
#          author_name: Publish to dev
#          fields: job
#          text: 'Publish failed :sadpanda:'
